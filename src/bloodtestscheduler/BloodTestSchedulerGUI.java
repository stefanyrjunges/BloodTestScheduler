/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bloodtestscheduler;

import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author stefa
 */
public class BloodTestSchedulerGUI extends javax.swing.JFrame {

    private final BloodTestQueue patientQueue = new BloodTestQueue();
    private final GPLinkedList gpLL = new GPLinkedList();
    private final NoShowStack noShowStack = new NoShowStack();
    /**
     * Creates new form BloodTestSchedulerGUI
     */
    public BloodTestSchedulerGUI() {
        initComponents();
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            SwingUtilities.updateComponentTreeUI(tabbedPane);
        } catch (UnsupportedLookAndFeelException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            ex.printStackTrace();
        }
        
            tabbedPane.addChangeListener((ChangeEvent e) -> {
                int selectedIndex = tabbedPane.getSelectedIndex(); // Get the selected tab index
                // Perform actions based on the selected tab
                switch (selectedIndex) {
                    case 0 -> System.out.println("Dash");
                    // Call a method here to perform action X
                    case 1 -> System.out.println("New ");
                    // Call a method here to perform action Y
                    case 2 -> {
                        scheduleTA.setText(patientQueue.printQueue());
                        if (patientQueue.isEmpty()) scheduleTA.setText("No patients in the system.");
                    }
                    case 3 -> {
                        System.out.println("GPS ");
                        gpListTA.setText(gpLL.displayGPs());
                        if (gpLL.isEmpty()) gpListTA.setText("No GPs in the system.");
                    }
                    case 4 -> {
                        System.out.println("GeeeePS ");
                        noShowListTA.setText(noShowStack.displayStack());
                    }
                    default -> {
                    }
                }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        dashboardPNL = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        newRequestPNL = new javax.swing.JPanel();
        newRequestLBL = new javax.swing.JLabel();
        nameLBL = new javax.swing.JLabel();
        ageLBL = new javax.swing.JLabel();
        addressLBL = new javax.swing.JLabel();
        phoneNoLBL = new javax.swing.JLabel();
        priorityLBL = new javax.swing.JLabel();
        gpLBL = new javax.swing.JLabel();
        isWardCB = new javax.swing.JCheckBox();
        isWardLBL = new javax.swing.JLabel();
        gpTF = new javax.swing.JTextField();
        nameTF = new javax.swing.JTextField();
        ageTF = new javax.swing.JTextField();
        addressTF = new javax.swing.JTextField();
        phoneNoTF = new javax.swing.JTextField();
        priorityTF = new javax.swing.JTextField();
        fillInLBL = new javax.swing.JLabel();
        submitBTN = new javax.swing.JButton();
        infoBTN = new javax.swing.JButton();
        schedulePNL = new javax.swing.JPanel();
        titleLBL = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        scheduleTA = new javax.swing.JTextArea();
        removeBTN = new javax.swing.JButton();
        searchPatientBTN = new javax.swing.JButton();
        noShowBTN = new javax.swing.JButton();
        gpPNL = new javax.swing.JPanel();
        gpTitleLBL = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gpListTA = new javax.swing.JTextArea();
        searchGPBTN = new javax.swing.JButton();
        noShowPNL = new javax.swing.JPanel();
        noShowLBL = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        noShowListTA = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabbedPane.setForeground(new java.awt.Color(81, 81, 81));
        tabbedPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tabbedPane.setFocusable(false);
        tabbedPane.setOpaque(true);
        tabbedPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabbedPaneMouseClicked(evt);
            }
        });

        dashboardPNL.setForeground(new java.awt.Color(242, 242, 242));
        dashboardPNL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 38)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(81, 81, 81));
        jLabel3.setText("Welcome!");
        dashboardPNL.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, 40));

        jLabel4.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 102));
        jLabel4.setText("How can we help you today?");
        dashboardPNL.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, -1, -1));

        jLabel2.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(81, 81, 81));
        jLabel2.setText("BLOODTEST");
        dashboardPNL.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, 21));

        jLabel7.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(81, 81, 81));
        jLabel7.setText("SCHEDULER");
        dashboardPNL.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, -1));

        jSeparator1.setBackground(new java.awt.Color(255, 51, 102));
        jSeparator1.setForeground(new java.awt.Color(255, 51, 102));
        dashboardPNL.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 241, -1));

        tabbedPane.addTab("dashboard", dashboardPNL);

        newRequestPNL.setFocusCycleRoot(true);

        newRequestLBL.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 24)); // NOI18N
        newRequestLBL.setForeground(new java.awt.Color(81, 81, 81));
        newRequestLBL.setText("NEW REQUEST");

        nameLBL.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        nameLBL.setText("Full name:");

        ageLBL.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        ageLBL.setText("Age:");

        addressLBL.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        addressLBL.setText("Address:");

        phoneNoLBL.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        phoneNoLBL.setText("Phone no:");

        priorityLBL.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        priorityLBL.setText("Priority:");

        gpLBL.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        gpLBL.setText("GP:");

        isWardCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isWardCBActionPerformed(evt);
            }
        });

        isWardLBL.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        isWardLBL.setText("Patient coming from hospital ward");

        nameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTFActionPerformed(evt);
            }
        });

        fillInLBL.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        fillInLBL.setForeground(new java.awt.Color(81, 81, 81));
        fillInLBL.setText("Please fill in patient's details.");

        submitBTN.setBackground(new java.awt.Color(255, 51, 102));
        submitBTN.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        submitBTN.setForeground(new java.awt.Color(255, 255, 255));
        submitBTN.setText("SUBMIT");
        submitBTN.setBorder(null);
        submitBTN.setBorderPainted(false);
        submitBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBTNActionPerformed(evt);
            }
        });

        infoBTN.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 8)); // NOI18N
        infoBTN.setText("What does it mean?");
        infoBTN.setBorder(null);
        infoBTN.setBorderPainted(false);
        infoBTN.setContentAreaFilled(false);
        infoBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newRequestPNLLayout = new javax.swing.GroupLayout(newRequestPNL);
        newRequestPNL.setLayout(newRequestPNLLayout);
        newRequestPNLLayout.setHorizontalGroup(
            newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newRequestPNLLayout.createSequentialGroup()
                .addGroup(newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newRequestPNLLayout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(newRequestLBL))
                            .addGroup(newRequestPNLLayout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(fillInLBL))
                            .addGroup(newRequestPNLLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(nameLBL)
                                .addGap(18, 18, 18)
                                .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newRequestPNLLayout.createSequentialGroup()
                                    .addGap(47, 47, 47)
                                    .addComponent(isWardCB)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(isWardLBL))
                                .addGroup(newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(newRequestPNLLayout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(priorityLBL)
                                        .addGap(30, 30, 30)
                                        .addComponent(priorityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newRequestPNLLayout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(submitBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(newRequestPNLLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(newRequestPNLLayout.createSequentialGroup()
                                        .addComponent(ageLBL)
                                        .addGap(46, 46, 46)
                                        .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(newRequestPNLLayout.createSequentialGroup()
                                        .addComponent(addressLBL)
                                        .addGap(25, 25, 25)
                                        .addComponent(addressTF, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(newRequestPNLLayout.createSequentialGroup()
                                        .addComponent(phoneNoLBL)
                                        .addGap(18, 18, 18)
                                        .addComponent(phoneNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(newRequestPNLLayout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(gpLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(gpTF, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(newRequestPNLLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(infoBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48))
        );
        newRequestPNLLayout.setVerticalGroup(
            newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newRequestPNLLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(newRequestLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(fillInLBL)
                .addGap(27, 27, 27)
                .addGroup(newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLBL))
                .addGap(12, 12, 12)
                .addGroup(newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ageLBL))
                .addGap(12, 12, 12)
                .addGroup(newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressTF, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressLBL))
                .addGap(12, 12, 12)
                .addGroup(newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newRequestPNLLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(phoneNoLBL))
                    .addComponent(phoneNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newRequestPNLLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(priorityLBL))
                    .addComponent(priorityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(infoBTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gpTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gpLBL, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(newRequestPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(isWardCB)
                    .addComponent(isWardLBL))
                .addGap(21, 21, 21)
                .addComponent(submitBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabbedPane.addTab("new request", newRequestPNL);

        titleLBL.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 24)); // NOI18N
        titleLBL.setForeground(new java.awt.Color(81, 81, 81));
        titleLBL.setText("PATIENTS' SCHEDULE");

        scheduleTA.setEditable(false);
        scheduleTA.setColumns(20);
        scheduleTA.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        scheduleTA.setRows(5);
        jScrollPane1.setViewportView(scheduleTA);

        removeBTN.setBackground(new java.awt.Color(255, 51, 102));
        removeBTN.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        removeBTN.setForeground(new java.awt.Color(255, 255, 255));
        removeBTN.setText("REMOVE NEXT IN LINE");
        removeBTN.setBorder(null);
        removeBTN.setBorderPainted(false);
        removeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBTNActionPerformed(evt);
            }
        });

        searchPatientBTN.setBackground(new java.awt.Color(255, 51, 102));
        searchPatientBTN.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        searchPatientBTN.setForeground(new java.awt.Color(255, 255, 255));
        searchPatientBTN.setText("SEARCH PATIENT BY NAME");
        searchPatientBTN.setBorder(null);
        searchPatientBTN.setBorderPainted(false);
        searchPatientBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPatientBTNActionPerformed(evt);
            }
        });

        noShowBTN.setBackground(new java.awt.Color(255, 51, 102));
        noShowBTN.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        noShowBTN.setForeground(new java.awt.Color(255, 255, 255));
        noShowBTN.setText("SET NEXT IN LINE AS NO-SHOW");
        noShowBTN.setBorder(null);
        noShowBTN.setBorderPainted(false);
        noShowBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noShowBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout schedulePNLLayout = new javax.swing.GroupLayout(schedulePNL);
        schedulePNL.setLayout(schedulePNLLayout);
        schedulePNLLayout.setHorizontalGroup(
            schedulePNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schedulePNLLayout.createSequentialGroup()
                .addGroup(schedulePNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(noShowBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(schedulePNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, schedulePNLLayout.createSequentialGroup()
                            .addGap(44, 44, 44)
                            .addGroup(schedulePNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(titleLBL)))
                        .addGroup(schedulePNLLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(searchPatientBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        schedulePNLLayout.setVerticalGroup(
            schedulePNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schedulePNLLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(titleLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(removeBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noShowBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchPatientBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        tabbedPane.addTab("patients' schedule", schedulePNL);

        gpTitleLBL.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 24)); // NOI18N
        gpTitleLBL.setForeground(new java.awt.Color(81, 81, 81));
        gpTitleLBL.setText("GENERAL PRACTICIONERS");

        gpListTA.setEditable(false);
        gpListTA.setColumns(20);
        gpListTA.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        gpListTA.setRows(5);
        jScrollPane2.setViewportView(gpListTA);

        searchGPBTN.setBackground(new java.awt.Color(255, 51, 102));
        searchGPBTN.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        searchGPBTN.setForeground(new java.awt.Color(255, 255, 255));
        searchGPBTN.setText("SEARCH GP BY NAME");
        searchGPBTN.setBorder(null);
        searchGPBTN.setBorderPainted(false);
        searchGPBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchGPBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout gpPNLLayout = new javax.swing.GroupLayout(gpPNL);
        gpPNL.setLayout(gpPNLLayout);
        gpPNLLayout.setHorizontalGroup(
            gpPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gpPNLLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(gpPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(gpTitleLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchGPBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        gpPNLLayout.setVerticalGroup(
            gpPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gpPNLLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(gpTitleLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchGPBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );

        tabbedPane.addTab("general practictioners", gpPNL);

        noShowLBL.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 24)); // NOI18N
        noShowLBL.setForeground(new java.awt.Color(81, 81, 81));
        noShowLBL.setText("NO SHOW");

        noShowListTA.setEditable(false);
        noShowListTA.setColumns(20);
        noShowListTA.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        noShowListTA.setRows(5);
        jScrollPane3.setViewportView(noShowListTA);

        javax.swing.GroupLayout noShowPNLLayout = new javax.swing.GroupLayout(noShowPNL);
        noShowPNL.setLayout(noShowPNLLayout);
        noShowPNLLayout.setHorizontalGroup(
            noShowPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(noShowPNLLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(noShowLBL)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, noShowPNLLayout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        noShowPNLLayout.setVerticalGroup(
            noShowPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(noShowPNLLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(noShowLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        tabbedPane.addTab("no-shows", noShowPNL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tabbedPane.getAccessibleContext().setAccessibleName("dashboard");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void isWardCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isWardCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isWardCBActionPerformed

    private void infoBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoBTNActionPerformed
        JOptionPane.showMessageDialog(null, """
                                            Urgent: Requires immediate attention and should be handled as soon as possible.
                                            Medium: Needs attention soon but is not as critical as urgent cases.
                                            Low: Can be attended to later with no immediate urgency.""");
    }//GEN-LAST:event_infoBTNActionPerformed

    private void nameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTFActionPerformed

    public void clearFields(){
        nameTF.setText("");
        ageTF.setText("");
        addressTF.setText("");
        phoneNoTF.setText("");
        priorityTF.setText("");
        gpTF.setText("");
        isWardCB.setSelected(false);
    }
    
    private void submitBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBTNActionPerformed
        String name = nameTF.getText();
        int age = Integer.parseInt(ageTF.getText());
        String address = addressTF.getText();
        String phoneNo = phoneNoTF.getText();
        String priorityLvl = priorityTF.getText();
        String gpName = gpTF.getText();
        boolean isWardSelected = isWardCB.isSelected();
        int key;
        
        Patient patient = new Patient(name, address, phoneNo, priorityLvl, age, isWardSelected);
        
        key = switch (priorityLvl.toLowerCase()) {
            case "urgent" -> 3;
            case "medium" -> 2;
            case "low" -> 1;
            default -> 1;
        };
        
        patientQueue.enqueue(key, patient);
        
        System.out.println(patientQueue.printQueue());
        System.out.println(key);
        
        if (gpLL.findGP(gpName) != null) {
            gpLL.assignPatient(gpName, patient);
        } else {
            gpLL.addGP(gpName);
            gpLL.assignPatient(gpName, patient);
        }
        
        gpLL.displayGPs();
        
        clearFields();
        
        JOptionPane.showMessageDialog(null, "New request added succesfully!");
        
    }//GEN-LAST:event_submitBTNActionPerformed

    private void removeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBTNActionPerformed
        patientQueue.dequeue();
        scheduleTA.setText("");
        scheduleTA.setText(patientQueue.printQueue());
    }//GEN-LAST:event_removeBTNActionPerformed

    private void tabbedPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabbedPaneMouseClicked
        
    }//GEN-LAST:event_tabbedPaneMouseClicked

    private void searchPatientBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPatientBTNActionPerformed
        if (patientQueue.isEmpty()) JOptionPane.showMessageDialog(null, "No patients in the system.");
        else {
            String searchPName = JOptionPane.showInputDialog(null, "Please input patient's name");
            Patient foundPatient = patientQueue.searchPatient(searchPName, 0);

            if (foundPatient != null){
                scheduleTA.setText("");
                scheduleTA.setText("Patient found:\n" +
                    "Full name: " + foundPatient.getName() +
                    "\nAge: " + foundPatient.getAge() +
                    "\nAddress: " + foundPatient.getAddress() +
                    "\nPhone number: " + foundPatient.getPhoneNo() +
                    "\nPriority: " + foundPatient.getPriorityLvl() +
                    "\nIn hospital ward? " + (foundPatient.isHospitalWard() ? "Yes" : "No"));
            } else {
                JOptionPane.showMessageDialog(null, "Patient not found.");
            }
        }
    }//GEN-LAST:event_searchPatientBTNActionPerformed

    private void searchGPBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchGPBTNActionPerformed
        String searchGPName = JOptionPane.showInputDialog(null, "Please input GP's name");
        gpListTA.setText("");
       
        GPNode gpNode = gpLL.findGP(searchGPName);
        
        if (gpNode != null) {
            gpListTA.setText("GP: " + gpNode.getGPName() + "\nPatients: " + gpNode.getPatients().size());
        } else {
            gpListTA.setText("GP not found.");
        }
    }//GEN-LAST:event_searchGPBTNActionPerformed

    private void noShowBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noShowBTNActionPerformed
        noShowStack.addNoShow(patientQueue.getNextPatient());
        patientQueue.dequeue();
        scheduleTA.setText("");
        scheduleTA.setText(patientQueue.printQueue());
    }//GEN-LAST:event_noShowBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BloodTestSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BloodTestSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BloodTestSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BloodTestSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BloodTestSchedulerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLBL;
    private javax.swing.JTextField addressTF;
    private javax.swing.JLabel ageLBL;
    private javax.swing.JTextField ageTF;
    private javax.swing.JPanel dashboardPNL;
    private javax.swing.JLabel fillInLBL;
    private javax.swing.JLabel gpLBL;
    private javax.swing.JTextArea gpListTA;
    private javax.swing.JPanel gpPNL;
    private javax.swing.JTextField gpTF;
    private javax.swing.JLabel gpTitleLBL;
    private javax.swing.JButton infoBTN;
    private javax.swing.JCheckBox isWardCB;
    private javax.swing.JLabel isWardLBL;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel nameLBL;
    private javax.swing.JTextField nameTF;
    private javax.swing.JLabel newRequestLBL;
    private javax.swing.JPanel newRequestPNL;
    private javax.swing.JButton noShowBTN;
    private javax.swing.JLabel noShowLBL;
    private javax.swing.JTextArea noShowListTA;
    private javax.swing.JPanel noShowPNL;
    private javax.swing.JLabel phoneNoLBL;
    private javax.swing.JTextField phoneNoTF;
    private javax.swing.JLabel priorityLBL;
    private javax.swing.JTextField priorityTF;
    private javax.swing.JButton removeBTN;
    private javax.swing.JPanel schedulePNL;
    private javax.swing.JTextArea scheduleTA;
    private javax.swing.JButton searchGPBTN;
    private javax.swing.JButton searchPatientBTN;
    private javax.swing.JButton submitBTN;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JLabel titleLBL;
    // End of variables declaration//GEN-END:variables
}
